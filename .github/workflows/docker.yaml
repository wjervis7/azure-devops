---
name: Publish Docker Images

on:
  push:
    branches: 
      - main
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PLATFORMS: linux/arm64,linux/amd64

jobs:
  tag:
    permissions:
      contents: write
      
    name: Bump Tag version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.tag.outputs.new_tag }}
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Branch
        id: branch
        run: |
          echo "branch=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
          pre_release_branches: dev
          append_to_pre_release_tag: beta

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag.outputs.new_tag }}
          name: Release ${{ steps.tag.outputs.new_tag }}
          generateReleaseNotes: true
          makeLatest: ${{ steps.branch.outputs.branch == 'main' }}
          prerelease: ${{ steps.branch.outputs.branch == 'dev' }}

  docker:
    name: Publish Docker images to GHCR
    runs-on: ubuntu-latest
    needs: tag
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Workflow vars
        id: vars
        run: |
          echo "nvmrc=$(cat .nvmrc | tr -cd [:digit:].)" >> $GITHUB_OUTPUT
          version=$(echo ${{ needs.tag.outputs.version }} | tr -cd [:digit:].)
          echo "version_patch=$(echo $version | cut -d '.' -f 1,2,3)" >> $GITHUB_OUTPUT
          echo "version_minor=$(echo $version | cut -d '.' -f 1,2)" >> $GITHUB_OUTPUT
          echo "version_major=$(echo $version | cut -d '.' -f 1)" >> $GITHUB_OUTPUT

      - name: Get labels from metadata
        id: metadata
        uses: docker/metadata-action@v4
        with: 
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ needs.tag.outputs.branch == 'main' }}
            type=raw,value=beta,enable=${{ needs.tag.outputs.branch == 'dev' }}
            type=raw,value=v${{ steps.vars.outputs.version_major}},enable=${{ needs.tag.outputs.branch == 'main' }}
            type=raw,value=v${{ steps.vars.outputs.version_minor}},enable=${{ needs.tag.outputs.branch == 'main' }}
            type=raw,value=v${{ steps.vars.outputs.version_patch}},enable=${{ needs.tag.outputs.branch == 'main' }}
            type=raw,value=v${{ steps.vars.outputs.version_major}}-beta,enable=${{ needs.tag.outputs.branch == 'dev' }}
            type=raw,value=v${{ steps.vars.outputs.version_minor}}-beta,enable=${{ needs.tag.outputs.branch == 'dev' }}
            type=raw,value=v${{ steps.vars.outputs.version_patch}}-beta,enable=${{ needs.tag.outputs.branch == 'dev' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            NODE_VERSION=${{ steps.vars.outputs.nvmrc }}
          